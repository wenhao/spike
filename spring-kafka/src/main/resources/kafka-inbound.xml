<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:int="http://www.springframework.org/schema/integration"
       xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
       xsi:schemaLocation=" http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <int:channel id="inputFromKafka">
        <int:queue/>
    </int:channel>

    <!--<int-kafka:inbound-channel-adapter id="kafkaInboundChannelAdapter"-->
                                       <!--kafka-consumer-context-ref="consumerContext"-->
                                       <!--auto-startup="true"-->
                                       <!--channel="inputFromKafka">-->
        <!--<int:poller fixed-delay="10" time-unit="MILLISECONDS" max-messages-per-poll="5"/>-->
    <!--</int-kafka:inbound-channel-adapter>-->

    <!--<bean id="consumerProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">-->
        <!--<property name="properties">-->
            <!--<props>-->
                <!--<prop key="auto.offset.reset">smallest</prop>-->
                <!--<prop key="socket.receive.buffer.bytes">10485760</prop>-->
                <!--<prop key="fetch.message.max.bytes">5242880</prop>-->
                <!--<prop key="auto.commit.interval.ms">1000</prop>-->
            <!--</props>-->
        <!--</property>-->
    <!--</bean>-->

    <bean id="kafkaReflectionDecoder"
          class="org.springframework.integration.kafka.serializer.avro.AvroReflectDatumBackedKafkaDecoder">
        <constructor-arg type="java.lang.Class" value="java.lang.String"/>
    </bean>

    <bean id="kafkaSpecificDecoder"
          class="org.springframework.integration.kafka.serializer.avro.AvroSpecificDatumBackedKafkaDecoder">
        <constructor-arg value="org.github.wenhao.kafka.domain.user.User"/>
    </bean>

    <!--<int-kafka:consumer-context id="consumerContext" consumer-timeout="1000" zookeeper-connect="zookeeperConnect"-->
                                <!--consumer-properties="consumerProperties">-->
        <!--<int-kafka:consumer-configurations>-->
            <!--<int-kafka:consumer-configuration group-id="default" max-messages="5"-->
                                              <!--key-decoder="kafkaReflectionDecoder"-->
                                              <!--value-decoder="kafkaSpecificDecoder">-->
                <!--<int-kafka:topic id="test" streams="4"/>-->
            <!--</int-kafka:consumer-configuration>-->
        <!--</int-kafka:consumer-configurations>-->
    <!--</int-kafka:consumer-context>-->

    <int-kafka:zookeeper-connect id="zookeeperConnect" zk-connect="localhost:2181" zk-connection-timeout="6000"
                                 zk-session-timeout="6000"
                                 zk-sync-time="2000"/>

    <bean id="kafkaConfiguration" class="org.springframework.integration.kafka.core.ZookeeperConfiguration">
        <constructor-arg ref="zookeeperConnect"/>
    </bean>

    <bean id="connectionFactory" class="org.springframework.integration.kafka.core.DefaultConnectionFactory">
        <constructor-arg ref="kafkaConfiguration"/>
    </bean>

    <int-kafka:message-driven-channel-adapter
            id="adapter"
            channel="inputFromKafka"
            connection-factory="connectionFactory"
            key-decoder="kafkaReflectionDecoder"
            payload-decoder="kafkaSpecificDecoder"
            max-fetch="100"
            auto-startup="true"
            topics="test"/>

</beans>
